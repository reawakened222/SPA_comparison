<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>clang_version</key>
	<string>cppcheck version 1.90</string>
	<key>diagnostics</key>
	<array>
		<dict>
			<key>category</key>
			<string>warning</string>
			<key>check_name</key>
			<string>uninitMemberVarPrivate</string>
			<key>description</key>
			<string>Member variable 'Iterator::value_' is not initialized in the constructor.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>78b31fef4b341891dd179c80667b3777</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>5</integer>
				<key>file</key>
				<integer>20</integer>
				<key>line</key>
				<integer>346</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Member variable 'Iterator::value_' is not initialized in the constructor.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>5</integer>
						<key>file</key>
						<integer>20</integer>
						<key>line</key>
						<integer>346</integer>
					</dict>
					<key>message</key>
					<string>Member variable 'Iterator::value_' is not initialized in the constructor.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>346</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>5</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>346</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Member variable 'Iterator::value_' is not initialized in the constructor.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>unusedPrivateFunction</string>
			<key>description</key>
			<string>Unused private function: 'Environment::Setup'</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>bcc65a119908da182a1ab9449ef938f0</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>42</integer>
				<key>file</key>
				<integer>1</integer>
				<key>line</key>
				<integer>1059</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Unused private function: 'Environment::Setup'</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>42</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>1059</integer>
					</dict>
					<key>message</key>
					<string>Unused private function: 'Environment::Setup'</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>42</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>1059</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>42</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>1059</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Unused private function: 'Environment::Setup'</string>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>functionStatic</string>
			<key>description</key>
			<string>Technically the member function 'testing::internal::Mutex::Lock' can be static (but you may consider moving to unnamed namespace).</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>2dbc052f9b9a0aeeda03fe95bcf5849e</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>8</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>1849</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Technically the member function 'testing::internal::Mutex::Lock' can be static (but you may consider moving to unnamed namespace).</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>8</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>1849</integer>
					</dict>
					<key>message</key>
					<string>Technically the member function 'testing::internal::Mutex::Lock' can be static (but you may consider moving to unnamed namespace).</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1849</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1849</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Technically the member function 'testing::internal::Mutex::Lock' can be static (but you may consider moving to unnamed namespace).</string>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>functionStatic</string>
			<key>description</key>
			<string>Technically the member function 'testing::internal::Mutex::Unlock' can be static (but you may consider moving to unnamed namespace).</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>2a8ab743b6c9792a69d4df4657271ea7</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>8</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>1850</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Technically the member function 'testing::internal::Mutex::Unlock' can be static (but you may consider moving to unnamed namespace).</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>8</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>1850</integer>
					</dict>
					<key>message</key>
					<string>Technically the member function 'testing::internal::Mutex::Unlock' can be static (but you may consider moving to unnamed namespace).</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1850</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1850</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Technically the member function 'testing::internal::Mutex::Unlock' can be static (but you may consider moving to unnamed namespace).</string>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>functionStatic</string>
			<key>description</key>
			<string>Technically the member function 'testing::internal::Mutex::AssertHeld' can be static (but you may consider moving to unnamed namespace).</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>391a8fb4d4e32972624851e796657ab9</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>8</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>1851</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Technically the member function 'testing::internal::Mutex::AssertHeld' can be static (but you may consider moving to unnamed namespace).</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>8</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>1851</integer>
					</dict>
					<key>message</key>
					<string>Technically the member function 'testing::internal::Mutex::AssertHeld' can be static (but you may consider moving to unnamed namespace).</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1851</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>8</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>1851</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Technically the member function 'testing::internal::Mutex::AssertHeld' can be static (but you may consider moving to unnamed namespace).</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>7396afb7ccd6027b5045f04fede9328f</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>881</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>881</integer>
					</dict>
					<key>message</key>
					<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>881</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>881</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>8352262792db1f33520967a143f070a1</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>883</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>883</integer>
					</dict>
					<key>message</key>
					<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>883</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>883</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'RE' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'IgnoredValue' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>5f1c5ed5aa88995fdd5d8fe4c6518bce</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>4</integer>
				<key>line</key>
				<integer>123</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'IgnoredValue' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>123</integer>
					</dict>
					<key>message</key>
					<string>Class 'IgnoredValue' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>123</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>123</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'IgnoredValue' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Struct 'ConstCharPtr' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>ee12ea928769fb24ef4c1c03eafc5aed</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>4</integer>
				<key>line</key>
				<integer>823</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Struct 'ConstCharPtr' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>823</integer>
					</dict>
					<key>message</key>
					<string>Struct 'ConstCharPtr' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>823</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>823</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Struct 'ConstCharPtr' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'Matcher' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>d10a29068392eaa600b5e8e36bb65fa2</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>7</integer>
				<key>line</key>
				<integer>345</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'Matcher' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>7</integer>
						<key>line</key>
						<integer>345</integer>
					</dict>
					<key>message</key>
					<string>Class 'Matcher' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>345</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>345</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'Matcher' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>2ce8e7cdff8b3f78f7df07ba2614f9bf</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>7</integer>
				<key>line</key>
				<integer>362</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>7</integer>
						<key>line</key>
						<integer>362</integer>
					</dict>
					<key>message</key>
					<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>362</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>362</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>b5f670259c4bb400e8eda7830dc027ea</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>7</integer>
				<key>line</key>
				<integer>365</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>7</integer>
						<key>line</key>
						<integer>365</integer>
					</dict>
					<key>message</key>
					<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>365</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>365</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'Matcher &lt; const std :: string &amp; &gt;' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>63a8b987d4577a8bbb89bc11ce4a4b92</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>7</integer>
				<key>line</key>
				<integer>381</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>7</integer>
						<key>line</key>
						<integer>381</integer>
					</dict>
					<key>message</key>
					<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>381</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>381</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>11f1f5f09577c369f45f67ef9b1bad53</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>7</integer>
				<key>line</key>
				<integer>384</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>7</integer>
						<key>line</key>
						<integer>384</integer>
					</dict>
					<key>message</key>
					<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>384</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>7</integer>
								<key>line</key>
								<integer>384</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'Matcher &lt; std :: string &gt;' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'CartesianProductGenerator' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>66aed6693e4a5c05c5aba33e95801717</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>20</integer>
				<key>line</key>
				<integer>756</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'CartesianProductGenerator' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>20</integer>
						<key>line</key>
						<integer>756</integer>
					</dict>
					<key>message</key>
					<string>Class 'CartesianProductGenerator' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>756</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>756</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'CartesianProductGenerator' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>noExplicitConstructor</string>
			<key>description</key>
			<string>Class 'CartesianProductHolder' has a constructor with 1 argument that is not explicit.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>1418e3770b6e0680d63ff6961c0bb807</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>3</integer>
				<key>file</key>
				<integer>20</integer>
				<key>line</key>
				<integer>869</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Class 'CartesianProductHolder' has a constructor with 1 argument that is not explicit.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>3</integer>
						<key>file</key>
						<integer>20</integer>
						<key>line</key>
						<integer>869</integer>
					</dict>
					<key>message</key>
					<string>Class 'CartesianProductHolder' has a constructor with 1 argument that is not explicit.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>869</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>3</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>869</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Class 'CartesianProductHolder' has a constructor with 1 argument that is not explicit.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>missingOverride</string>
			<key>description</key>
			<string>The function 'TestBody' overrides a function in a base class but is not marked with a 'override' specifier.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>47a68edd9d3e4758f83011825018b2ec</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>14</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Virtual function in base class</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>16</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>485</integer>
					</dict>
					<key>message</key>
					<string>Virtual function in base class</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>485</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>485</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>14</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>14</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>485</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>485</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Function in derived class</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>14</integer>
					</dict>
					<key>message</key>
					<string>Function in derived class</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>14</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>14</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>The function 'TestBody' overrides a function in a base class but is not marked with a 'override' specifier.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>missingOverride</string>
			<key>description</key>
			<string>The function 'TestBody' overrides a function in a base class but is not marked with a 'override' specifier.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>090f15d97c402e7bc9367434db86cace</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>1</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>29</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Virtual function in base class</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>16</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>485</integer>
					</dict>
					<key>message</key>
					<string>Virtual function in base class</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>485</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>16</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>485</integer>
							</dict>
						</array>
					</array>
				</dict>
				<dict>
					<key>edges</key>
					<array>
						<dict>
							<key>end</key>
							<array>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>1</integer>
									<key>file</key>
									<integer>0</integer>
									<key>line</key>
									<integer>29</integer>
								</dict>
							</array>
							<key>start</key>
							<array>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>485</integer>
								</dict>
								<dict>
									<key>col</key>
									<integer>16</integer>
									<key>file</key>
									<integer>1</integer>
									<key>line</key>
									<integer>485</integer>
								</dict>
							</array>
						</dict>
					</array>
					<key>kind</key>
					<string>control</string>
				</dict>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Function in derived class</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>1</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>29</integer>
					</dict>
					<key>message</key>
					<string>Function in derived class</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>29</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>1</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>29</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>The function 'TestBody' overrides a function in a base class but is not marked with a 'override' specifier.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>performance</string>
			<key>check_name</key>
			<string>passedByValue</string>
			<key>description</key>
			<string>Function parameter 'def' should be passed by const reference.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>0b445a1d7235c8d2f61876f11aa14318</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>62</integer>
				<key>file</key>
				<integer>4</integer>
				<key>line</key>
				<integer>495</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Function parameter 'def' should be passed by const reference.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>62</integer>
						<key>file</key>
						<integer>4</integer>
						<key>line</key>
						<integer>495</integer>
					</dict>
					<key>message</key>
					<string>Function parameter 'def' should be passed by const reference.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>62</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>495</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>62</integer>
								<key>file</key>
								<integer>4</integer>
								<key>line</key>
								<integer>495</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Function parameter 'def' should be passed by const reference.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>constParameter</string>
			<key>description</key>
			<string>Parameter 'val' can be declared with const</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>f589a26b0966142d46e9c6813ece5330</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>43</integer>
				<key>file</key>
				<integer>8</integer>
				<key>line</key>
				<integer>161</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Parameter 'val' can be declared with const</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>43</integer>
						<key>file</key>
						<integer>8</integer>
						<key>line</key>
						<integer>161</integer>
					</dict>
					<key>message</key>
					<string>Parameter 'val' can be declared with const</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>43</integer>
								<key>file</key>
								<integer>8</integer>
								<key>line</key>
								<integer>161</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>43</integer>
								<key>file</key>
								<integer>8</integer>
								<key>line</key>
								<integer>161</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Parameter 'val' can be declared with const</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>constParameter</string>
			<key>description</key>
			<string>Parameter 'basic_manipulator' can be declared with const</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>a6fba8c4fc01d12afc438059d730bfdd</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>25</integer>
				<key>file</key>
				<integer>1</integer>
				<key>line</key>
				<integer>336</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Parameter 'basic_manipulator' can be declared with const</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>25</integer>
						<key>file</key>
						<integer>1</integer>
						<key>line</key>
						<integer>336</integer>
					</dict>
					<key>message</key>
					<string>Parameter 'basic_manipulator' can be declared with const</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>25</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>336</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>25</integer>
								<key>file</key>
								<integer>1</integer>
								<key>line</key>
								<integer>336</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Parameter 'basic_manipulator' can be declared with const</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>useStlAlgorithm</string>
			<key>description</key>
			<string>Consider using std::find_if algorithm instead of a raw loop.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>b83af6960b11efd42cc2dd19f628d820</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>67</integer>
				<key>file</key>
				<integer>20</integer>
				<key>line</key>
				<integer>673</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Consider using std::find_if algorithm instead of a raw loop.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>67</integer>
						<key>file</key>
						<integer>20</integer>
						<key>line</key>
						<integer>673</integer>
					</dict>
					<key>message</key>
					<string>Consider using std::find_if algorithm instead of a raw loop.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>67</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>673</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>67</integer>
								<key>file</key>
								<integer>20</integer>
								<key>line</key>
								<integer>673</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Consider using std::find_if algorithm instead of a raw loop.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>portability</string>
			<key>check_name</key>
			<string>shiftTooManyBitsSigned</string>
			<key>description</key>
			<string>Shifting signed 64-bit value by 63 bits is implementation-defined behaviour</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>3d606115ebfb58a52559a16f453a281d</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>34</integer>
				<key>file</key>
				<integer>15</integer>
				<key>line</key>
				<integer>2099</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Shift</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>34</integer>
						<key>file</key>
						<integer>15</integer>
						<key>line</key>
						<integer>2099</integer>
					</dict>
					<key>message</key>
					<string>Shift</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>34</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>2099</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>34</integer>
								<key>file</key>
								<integer>15</integer>
								<key>line</key>
								<integer>2099</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Shifting signed 64-bit value by 63 bits is implementation-defined behaviour</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>unreadVariable</string>
			<key>description</key>
			<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>30aa6256c305a84c0e2915deca33e8c9</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>2</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>26</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>2</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>26</integer>
					</dict>
					<key>message</key>
					<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>2</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>26</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>2</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>26</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
		</dict>
		<dict>
			<key>category</key>
			<string>style</string>
			<key>check_name</key>
			<string>unreadVariable</string>
			<key>description</key>
			<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
			<key>issue_context</key>
			<string></string>
			<key>issue_context_kind</key>
			<string></string>
			<key>issue_hash_content_of_line_in_context</key>
			<string>2ab7d665c639d27fd4373a32d1f02beb</string>
			<key>issue_hash_function_offset</key>
			<string></string>
			<key>location</key>
			<dict>
				<key>col</key>
				<integer>2</integer>
				<key>file</key>
				<integer>0</integer>
				<key>line</key>
				<integer>32</integer>
			</dict>
			<key>path</key>
			<array>
				<dict>
					<key>depth</key>
					<integer>0</integer>
					<key>extended_message</key>
					<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
					<key>kind</key>
					<string>event</string>
					<key>location</key>
					<dict>
						<key>col</key>
						<integer>2</integer>
						<key>file</key>
						<integer>0</integer>
						<key>line</key>
						<integer>32</integer>
					</dict>
					<key>message</key>
					<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
					<key>ranges</key>
					<array>
						<array>
							<dict>
								<key>col</key>
								<integer>2</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>32</integer>
							</dict>
							<dict>
								<key>col</key>
								<integer>2</integer>
								<key>file</key>
								<integer>0</integer>
								<key>line</key>
								<integer>32</integer>
							</dict>
						</array>
					</array>
				</dict>
			</array>
			<key>type</key>
			<string>Variable 'gtest_ar' is assigned a value that is never used.</string>
		</dict>
	</array>
	<key>files</key>
	<array>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/libs/core/src/format_unittest.cpp</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/libs/core/include/mrpt/core/format.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/libs/core/include/mrpt/core/common.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-internal.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-string.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-death-test.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-matchers.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-message.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-param-test.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-printers.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest_prod.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-test-part.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest-typed-test.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/gtest_pred_impl.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-port.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-type-util.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-port-arch.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/custom/gtest-port.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/custom/gtest-printers.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-param-util.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h</string>
		<string>/home/jmm01/spa_comparison/C_Cpp/target/CMake_ABLE/mrpt/3rdparty/googletest/googletest/include/gtest/internal/gtest-filepath.h</string>
	</array>
</dict>
</plist>
